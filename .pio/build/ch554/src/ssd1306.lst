                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module ssd1306
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _hexTable
                                     12 	.globl _OLED_FONT
                                     13 	.globl _OLED_INIT_CMD
                                     14 	.globl _i2c_writeByte
                                     15 	.globl _i2c_stopCommunication
                                     16 	.globl _i2c_startCommunication
                                     17 	.globl _UIF_BUS_RST
                                     18 	.globl _UIF_DETECT
                                     19 	.globl _UIF_TRANSFER
                                     20 	.globl _UIF_SUSPEND
                                     21 	.globl _UIF_HST_SOF
                                     22 	.globl _UIF_FIFO_OV
                                     23 	.globl _U_SIE_FREE
                                     24 	.globl _U_TOG_OK
                                     25 	.globl _U_IS_NAK
                                     26 	.globl _ADC_CHAN0
                                     27 	.globl _ADC_CHAN1
                                     28 	.globl _CMP_CHAN
                                     29 	.globl _ADC_START
                                     30 	.globl _ADC_IF
                                     31 	.globl _CMP_IF
                                     32 	.globl _CMPO
                                     33 	.globl _U1RI
                                     34 	.globl _U1TI
                                     35 	.globl _U1RB8
                                     36 	.globl _U1TB8
                                     37 	.globl _U1REN
                                     38 	.globl _U1SMOD
                                     39 	.globl _U1SM0
                                     40 	.globl _S0_R_FIFO
                                     41 	.globl _S0_T_FIFO
                                     42 	.globl _S0_FREE
                                     43 	.globl _S0_IF_BYTE
                                     44 	.globl _S0_IF_FIRST
                                     45 	.globl _S0_IF_OV
                                     46 	.globl _S0_FST_ACT
                                     47 	.globl _CP_RL2
                                     48 	.globl _C_T2
                                     49 	.globl _TR2
                                     50 	.globl _EXEN2
                                     51 	.globl _TCLK
                                     52 	.globl _RCLK
                                     53 	.globl _EXF2
                                     54 	.globl _CAP1F
                                     55 	.globl _TF2
                                     56 	.globl _RI
                                     57 	.globl _TI
                                     58 	.globl _RB8
                                     59 	.globl _TB8
                                     60 	.globl _REN
                                     61 	.globl _SM2
                                     62 	.globl _SM1
                                     63 	.globl _SM0
                                     64 	.globl _IT0
                                     65 	.globl _IE0
                                     66 	.globl _IT1
                                     67 	.globl _IE1
                                     68 	.globl _TR0
                                     69 	.globl _TF0
                                     70 	.globl _TR1
                                     71 	.globl _TF1
                                     72 	.globl _RXD
                                     73 	.globl _PWM1_
                                     74 	.globl _TXD
                                     75 	.globl _PWM2_
                                     76 	.globl _AIN3
                                     77 	.globl _VBUS1
                                     78 	.globl _INT0
                                     79 	.globl _TXD1_
                                     80 	.globl _INT1
                                     81 	.globl _T0
                                     82 	.globl _RXD1_
                                     83 	.globl _PWM2
                                     84 	.globl _T1
                                     85 	.globl _UDP
                                     86 	.globl _UDM
                                     87 	.globl _TIN0
                                     88 	.globl _CAP1
                                     89 	.globl _T2
                                     90 	.globl _AIN0
                                     91 	.globl _VBUS2
                                     92 	.globl _TIN1
                                     93 	.globl _CAP2
                                     94 	.globl _T2EX
                                     95 	.globl _RXD_
                                     96 	.globl _TXD_
                                     97 	.globl _AIN1
                                     98 	.globl _UCC1
                                     99 	.globl _TIN2
                                    100 	.globl _SCS
                                    101 	.globl _CAP1_
                                    102 	.globl _T2_
                                    103 	.globl _AIN2
                                    104 	.globl _UCC2
                                    105 	.globl _TIN3
                                    106 	.globl _PWM1
                                    107 	.globl _MOSI
                                    108 	.globl _TIN4
                                    109 	.globl _RXD1
                                    110 	.globl _MISO
                                    111 	.globl _TIN5
                                    112 	.globl _TXD1
                                    113 	.globl _SCK
                                    114 	.globl _IE_SPI0
                                    115 	.globl _IE_TKEY
                                    116 	.globl _IE_USB
                                    117 	.globl _IE_ADC
                                    118 	.globl _IE_UART1
                                    119 	.globl _IE_PWMX
                                    120 	.globl _IE_GPIO
                                    121 	.globl _IE_WDOG
                                    122 	.globl _PX0
                                    123 	.globl _PT0
                                    124 	.globl _PX1
                                    125 	.globl _PT1
                                    126 	.globl _PS
                                    127 	.globl _PT2
                                    128 	.globl _PL_FLAG
                                    129 	.globl _PH_FLAG
                                    130 	.globl _EX0
                                    131 	.globl _ET0
                                    132 	.globl _EX1
                                    133 	.globl _ET1
                                    134 	.globl _ES
                                    135 	.globl _ET2
                                    136 	.globl _E_DIS
                                    137 	.globl _EA
                                    138 	.globl _P
                                    139 	.globl _F1
                                    140 	.globl _OV
                                    141 	.globl _RS0
                                    142 	.globl _RS1
                                    143 	.globl _F0
                                    144 	.globl _AC
                                    145 	.globl _CY
                                    146 	.globl _UEP1_DMA_H
                                    147 	.globl _UEP1_DMA_L
                                    148 	.globl _UEP1_DMA
                                    149 	.globl _UEP0_DMA_H
                                    150 	.globl _UEP0_DMA_L
                                    151 	.globl _UEP0_DMA
                                    152 	.globl _UEP2_3_MOD
                                    153 	.globl _UEP4_1_MOD
                                    154 	.globl _UEP3_DMA_H
                                    155 	.globl _UEP3_DMA_L
                                    156 	.globl _UEP3_DMA
                                    157 	.globl _UEP2_DMA_H
                                    158 	.globl _UEP2_DMA_L
                                    159 	.globl _UEP2_DMA
                                    160 	.globl _USB_DEV_AD
                                    161 	.globl _USB_CTRL
                                    162 	.globl _USB_INT_EN
                                    163 	.globl _UEP4_T_LEN
                                    164 	.globl _UEP4_CTRL
                                    165 	.globl _UEP0_T_LEN
                                    166 	.globl _UEP0_CTRL
                                    167 	.globl _USB_RX_LEN
                                    168 	.globl _USB_MIS_ST
                                    169 	.globl _USB_INT_ST
                                    170 	.globl _USB_INT_FG
                                    171 	.globl _UEP3_T_LEN
                                    172 	.globl _UEP3_CTRL
                                    173 	.globl _UEP2_T_LEN
                                    174 	.globl _UEP2_CTRL
                                    175 	.globl _UEP1_T_LEN
                                    176 	.globl _UEP1_CTRL
                                    177 	.globl _UDEV_CTRL
                                    178 	.globl _USB_C_CTRL
                                    179 	.globl _TKEY_DATH
                                    180 	.globl _TKEY_DATL
                                    181 	.globl _TKEY_DAT
                                    182 	.globl _TKEY_CTRL
                                    183 	.globl _ADC_DATA
                                    184 	.globl _ADC_CFG
                                    185 	.globl _ADC_CTRL
                                    186 	.globl _SBAUD1
                                    187 	.globl _SBUF1
                                    188 	.globl _SCON1
                                    189 	.globl _SPI0_SETUP
                                    190 	.globl _SPI0_CK_SE
                                    191 	.globl _SPI0_CTRL
                                    192 	.globl _SPI0_DATA
                                    193 	.globl _SPI0_STAT
                                    194 	.globl _PWM_CK_SE
                                    195 	.globl _PWM_CTRL
                                    196 	.globl _PWM_DATA1
                                    197 	.globl _PWM_DATA2
                                    198 	.globl _T2CAP1H
                                    199 	.globl _T2CAP1L
                                    200 	.globl _T2CAP1
                                    201 	.globl _TH2
                                    202 	.globl _TL2
                                    203 	.globl _T2COUNT
                                    204 	.globl _RCAP2H
                                    205 	.globl _RCAP2L
                                    206 	.globl _RCAP2
                                    207 	.globl _T2MOD
                                    208 	.globl _T2CON
                                    209 	.globl _SBUF
                                    210 	.globl _SCON
                                    211 	.globl _TH1
                                    212 	.globl _TH0
                                    213 	.globl _TL1
                                    214 	.globl _TL0
                                    215 	.globl _TMOD
                                    216 	.globl _TCON
                                    217 	.globl _XBUS_AUX
                                    218 	.globl _PIN_FUNC
                                    219 	.globl _P3_DIR_PU
                                    220 	.globl _P3_MOD_OC
                                    221 	.globl _P3
                                    222 	.globl _P2
                                    223 	.globl _P1_DIR_PU
                                    224 	.globl _P1_MOD_OC
                                    225 	.globl _P1
                                    226 	.globl _ROM_CTRL
                                    227 	.globl _ROM_DATA_H
                                    228 	.globl _ROM_DATA_L
                                    229 	.globl _ROM_DATA
                                    230 	.globl _ROM_ADDR_H
                                    231 	.globl _ROM_ADDR_L
                                    232 	.globl _ROM_ADDR
                                    233 	.globl _GPIO_IE
                                    234 	.globl _IP_EX
                                    235 	.globl _IE_EX
                                    236 	.globl _IP
                                    237 	.globl _IE
                                    238 	.globl _WDOG_COUNT
                                    239 	.globl _RESET_KEEP
                                    240 	.globl _WAKE_CTRL
                                    241 	.globl _CLOCK_CFG
                                    242 	.globl _PCON
                                    243 	.globl _GLOBAL_CFG
                                    244 	.globl _SAFE_MOD
                                    245 	.globl _DPH
                                    246 	.globl _DPL
                                    247 	.globl _SP
                                    248 	.globl _B
                                    249 	.globl _ACC
                                    250 	.globl _PSW
                                    251 	.globl _ssd1306_setCursor_PARM_2
                                    252 	.globl _ssd1306_initialise
                                    253 	.globl _ssd1306_verticalShift
                                    254 	.globl _ssd1306_printCharacter
                                    255 	.globl _ssd1306_printString
                                    256 	.globl _ssd1306_printHexByte
                                    257 	.globl _ssd1306_printHexWord
                                    258 	.globl _ssd1306_setCursor
                                    259 	.globl _ssd1306_clearScreen
                                    260 	.globl _ssd1306_test
                                    261 ;--------------------------------------------------------
                                    262 ; special function registers
                                    263 ;--------------------------------------------------------
                                    264 	.area RSEG    (ABS,DATA)
      000000                        265 	.org 0x0000
                           0000D0   266 _PSW	=	0x00d0
                           0000E0   267 _ACC	=	0x00e0
                           0000F0   268 _B	=	0x00f0
                           000081   269 _SP	=	0x0081
                           000082   270 _DPL	=	0x0082
                           000083   271 _DPH	=	0x0083
                           0000A1   272 _SAFE_MOD	=	0x00a1
                           0000B1   273 _GLOBAL_CFG	=	0x00b1
                           000087   274 _PCON	=	0x0087
                           0000B9   275 _CLOCK_CFG	=	0x00b9
                           0000A9   276 _WAKE_CTRL	=	0x00a9
                           0000FE   277 _RESET_KEEP	=	0x00fe
                           0000FF   278 _WDOG_COUNT	=	0x00ff
                           0000A8   279 _IE	=	0x00a8
                           0000B8   280 _IP	=	0x00b8
                           0000E8   281 _IE_EX	=	0x00e8
                           0000E9   282 _IP_EX	=	0x00e9
                           0000C7   283 _GPIO_IE	=	0x00c7
                           008584   284 _ROM_ADDR	=	0x8584
                           000084   285 _ROM_ADDR_L	=	0x0084
                           000085   286 _ROM_ADDR_H	=	0x0085
                           008F8E   287 _ROM_DATA	=	0x8f8e
                           00008E   288 _ROM_DATA_L	=	0x008e
                           00008F   289 _ROM_DATA_H	=	0x008f
                           000086   290 _ROM_CTRL	=	0x0086
                           000090   291 _P1	=	0x0090
                           000092   292 _P1_MOD_OC	=	0x0092
                           000093   293 _P1_DIR_PU	=	0x0093
                           0000A0   294 _P2	=	0x00a0
                           0000B0   295 _P3	=	0x00b0
                           000096   296 _P3_MOD_OC	=	0x0096
                           000097   297 _P3_DIR_PU	=	0x0097
                           0000C6   298 _PIN_FUNC	=	0x00c6
                           0000A2   299 _XBUS_AUX	=	0x00a2
                           000088   300 _TCON	=	0x0088
                           000089   301 _TMOD	=	0x0089
                           00008A   302 _TL0	=	0x008a
                           00008B   303 _TL1	=	0x008b
                           00008C   304 _TH0	=	0x008c
                           00008D   305 _TH1	=	0x008d
                           000098   306 _SCON	=	0x0098
                           000099   307 _SBUF	=	0x0099
                           0000C8   308 _T2CON	=	0x00c8
                           0000C9   309 _T2MOD	=	0x00c9
                           00CBCA   310 _RCAP2	=	0xcbca
                           0000CA   311 _RCAP2L	=	0x00ca
                           0000CB   312 _RCAP2H	=	0x00cb
                           00CDCC   313 _T2COUNT	=	0xcdcc
                           0000CC   314 _TL2	=	0x00cc
                           0000CD   315 _TH2	=	0x00cd
                           00CFCE   316 _T2CAP1	=	0xcfce
                           0000CE   317 _T2CAP1L	=	0x00ce
                           0000CF   318 _T2CAP1H	=	0x00cf
                           00009B   319 _PWM_DATA2	=	0x009b
                           00009C   320 _PWM_DATA1	=	0x009c
                           00009D   321 _PWM_CTRL	=	0x009d
                           00009E   322 _PWM_CK_SE	=	0x009e
                           0000F8   323 _SPI0_STAT	=	0x00f8
                           0000F9   324 _SPI0_DATA	=	0x00f9
                           0000FA   325 _SPI0_CTRL	=	0x00fa
                           0000FB   326 _SPI0_CK_SE	=	0x00fb
                           0000FC   327 _SPI0_SETUP	=	0x00fc
                           0000C0   328 _SCON1	=	0x00c0
                           0000C1   329 _SBUF1	=	0x00c1
                           0000C2   330 _SBAUD1	=	0x00c2
                           000080   331 _ADC_CTRL	=	0x0080
                           00009A   332 _ADC_CFG	=	0x009a
                           00009F   333 _ADC_DATA	=	0x009f
                           0000C3   334 _TKEY_CTRL	=	0x00c3
                           00C5C4   335 _TKEY_DAT	=	0xc5c4
                           0000C4   336 _TKEY_DATL	=	0x00c4
                           0000C5   337 _TKEY_DATH	=	0x00c5
                           000091   338 _USB_C_CTRL	=	0x0091
                           0000D1   339 _UDEV_CTRL	=	0x00d1
                           0000D2   340 _UEP1_CTRL	=	0x00d2
                           0000D3   341 _UEP1_T_LEN	=	0x00d3
                           0000D4   342 _UEP2_CTRL	=	0x00d4
                           0000D5   343 _UEP2_T_LEN	=	0x00d5
                           0000D6   344 _UEP3_CTRL	=	0x00d6
                           0000D7   345 _UEP3_T_LEN	=	0x00d7
                           0000D8   346 _USB_INT_FG	=	0x00d8
                           0000D9   347 _USB_INT_ST	=	0x00d9
                           0000DA   348 _USB_MIS_ST	=	0x00da
                           0000DB   349 _USB_RX_LEN	=	0x00db
                           0000DC   350 _UEP0_CTRL	=	0x00dc
                           0000DD   351 _UEP0_T_LEN	=	0x00dd
                           0000DE   352 _UEP4_CTRL	=	0x00de
                           0000DF   353 _UEP4_T_LEN	=	0x00df
                           0000E1   354 _USB_INT_EN	=	0x00e1
                           0000E2   355 _USB_CTRL	=	0x00e2
                           0000E3   356 _USB_DEV_AD	=	0x00e3
                           00E5E4   357 _UEP2_DMA	=	0xe5e4
                           0000E4   358 _UEP2_DMA_L	=	0x00e4
                           0000E5   359 _UEP2_DMA_H	=	0x00e5
                           00E7E6   360 _UEP3_DMA	=	0xe7e6
                           0000E6   361 _UEP3_DMA_L	=	0x00e6
                           0000E7   362 _UEP3_DMA_H	=	0x00e7
                           0000EA   363 _UEP4_1_MOD	=	0x00ea
                           0000EB   364 _UEP2_3_MOD	=	0x00eb
                           00EDEC   365 _UEP0_DMA	=	0xedec
                           0000EC   366 _UEP0_DMA_L	=	0x00ec
                           0000ED   367 _UEP0_DMA_H	=	0x00ed
                           00EFEE   368 _UEP1_DMA	=	0xefee
                           0000EE   369 _UEP1_DMA_L	=	0x00ee
                           0000EF   370 _UEP1_DMA_H	=	0x00ef
                                    371 ;--------------------------------------------------------
                                    372 ; special function bits
                                    373 ;--------------------------------------------------------
                                    374 	.area RSEG    (ABS,DATA)
      000000                        375 	.org 0x0000
                           0000D7   376 _CY	=	0x00d7
                           0000D6   377 _AC	=	0x00d6
                           0000D5   378 _F0	=	0x00d5
                           0000D4   379 _RS1	=	0x00d4
                           0000D3   380 _RS0	=	0x00d3
                           0000D2   381 _OV	=	0x00d2
                           0000D1   382 _F1	=	0x00d1
                           0000D0   383 _P	=	0x00d0
                           0000AF   384 _EA	=	0x00af
                           0000AE   385 _E_DIS	=	0x00ae
                           0000AD   386 _ET2	=	0x00ad
                           0000AC   387 _ES	=	0x00ac
                           0000AB   388 _ET1	=	0x00ab
                           0000AA   389 _EX1	=	0x00aa
                           0000A9   390 _ET0	=	0x00a9
                           0000A8   391 _EX0	=	0x00a8
                           0000BF   392 _PH_FLAG	=	0x00bf
                           0000BE   393 _PL_FLAG	=	0x00be
                           0000BD   394 _PT2	=	0x00bd
                           0000BC   395 _PS	=	0x00bc
                           0000BB   396 _PT1	=	0x00bb
                           0000BA   397 _PX1	=	0x00ba
                           0000B9   398 _PT0	=	0x00b9
                           0000B8   399 _PX0	=	0x00b8
                           0000EF   400 _IE_WDOG	=	0x00ef
                           0000EE   401 _IE_GPIO	=	0x00ee
                           0000ED   402 _IE_PWMX	=	0x00ed
                           0000EC   403 _IE_UART1	=	0x00ec
                           0000EB   404 _IE_ADC	=	0x00eb
                           0000EA   405 _IE_USB	=	0x00ea
                           0000E9   406 _IE_TKEY	=	0x00e9
                           0000E8   407 _IE_SPI0	=	0x00e8
                           000097   408 _SCK	=	0x0097
                           000097   409 _TXD1	=	0x0097
                           000097   410 _TIN5	=	0x0097
                           000096   411 _MISO	=	0x0096
                           000096   412 _RXD1	=	0x0096
                           000096   413 _TIN4	=	0x0096
                           000095   414 _MOSI	=	0x0095
                           000095   415 _PWM1	=	0x0095
                           000095   416 _TIN3	=	0x0095
                           000095   417 _UCC2	=	0x0095
                           000095   418 _AIN2	=	0x0095
                           000094   419 _T2_	=	0x0094
                           000094   420 _CAP1_	=	0x0094
                           000094   421 _SCS	=	0x0094
                           000094   422 _TIN2	=	0x0094
                           000094   423 _UCC1	=	0x0094
                           000094   424 _AIN1	=	0x0094
                           000093   425 _TXD_	=	0x0093
                           000092   426 _RXD_	=	0x0092
                           000091   427 _T2EX	=	0x0091
                           000091   428 _CAP2	=	0x0091
                           000091   429 _TIN1	=	0x0091
                           000091   430 _VBUS2	=	0x0091
                           000091   431 _AIN0	=	0x0091
                           000090   432 _T2	=	0x0090
                           000090   433 _CAP1	=	0x0090
                           000090   434 _TIN0	=	0x0090
                           0000B7   435 _UDM	=	0x00b7
                           0000B6   436 _UDP	=	0x00b6
                           0000B5   437 _T1	=	0x00b5
                           0000B4   438 _PWM2	=	0x00b4
                           0000B4   439 _RXD1_	=	0x00b4
                           0000B4   440 _T0	=	0x00b4
                           0000B3   441 _INT1	=	0x00b3
                           0000B2   442 _TXD1_	=	0x00b2
                           0000B2   443 _INT0	=	0x00b2
                           0000B2   444 _VBUS1	=	0x00b2
                           0000B2   445 _AIN3	=	0x00b2
                           0000B1   446 _PWM2_	=	0x00b1
                           0000B1   447 _TXD	=	0x00b1
                           0000B0   448 _PWM1_	=	0x00b0
                           0000B0   449 _RXD	=	0x00b0
                           00008F   450 _TF1	=	0x008f
                           00008E   451 _TR1	=	0x008e
                           00008D   452 _TF0	=	0x008d
                           00008C   453 _TR0	=	0x008c
                           00008B   454 _IE1	=	0x008b
                           00008A   455 _IT1	=	0x008a
                           000089   456 _IE0	=	0x0089
                           000088   457 _IT0	=	0x0088
                           00009F   458 _SM0	=	0x009f
                           00009E   459 _SM1	=	0x009e
                           00009D   460 _SM2	=	0x009d
                           00009C   461 _REN	=	0x009c
                           00009B   462 _TB8	=	0x009b
                           00009A   463 _RB8	=	0x009a
                           000099   464 _TI	=	0x0099
                           000098   465 _RI	=	0x0098
                           0000CF   466 _TF2	=	0x00cf
                           0000CF   467 _CAP1F	=	0x00cf
                           0000CE   468 _EXF2	=	0x00ce
                           0000CD   469 _RCLK	=	0x00cd
                           0000CC   470 _TCLK	=	0x00cc
                           0000CB   471 _EXEN2	=	0x00cb
                           0000CA   472 _TR2	=	0x00ca
                           0000C9   473 _C_T2	=	0x00c9
                           0000C8   474 _CP_RL2	=	0x00c8
                           0000FF   475 _S0_FST_ACT	=	0x00ff
                           0000FE   476 _S0_IF_OV	=	0x00fe
                           0000FD   477 _S0_IF_FIRST	=	0x00fd
                           0000FC   478 _S0_IF_BYTE	=	0x00fc
                           0000FB   479 _S0_FREE	=	0x00fb
                           0000FA   480 _S0_T_FIFO	=	0x00fa
                           0000F8   481 _S0_R_FIFO	=	0x00f8
                           0000C7   482 _U1SM0	=	0x00c7
                           0000C5   483 _U1SMOD	=	0x00c5
                           0000C4   484 _U1REN	=	0x00c4
                           0000C3   485 _U1TB8	=	0x00c3
                           0000C2   486 _U1RB8	=	0x00c2
                           0000C1   487 _U1TI	=	0x00c1
                           0000C0   488 _U1RI	=	0x00c0
                           000087   489 _CMPO	=	0x0087
                           000086   490 _CMP_IF	=	0x0086
                           000085   491 _ADC_IF	=	0x0085
                           000084   492 _ADC_START	=	0x0084
                           000083   493 _CMP_CHAN	=	0x0083
                           000081   494 _ADC_CHAN1	=	0x0081
                           000080   495 _ADC_CHAN0	=	0x0080
                           0000DF   496 _U_IS_NAK	=	0x00df
                           0000DE   497 _U_TOG_OK	=	0x00de
                           0000DD   498 _U_SIE_FREE	=	0x00dd
                           0000DC   499 _UIF_FIFO_OV	=	0x00dc
                           0000DB   500 _UIF_HST_SOF	=	0x00db
                           0000DA   501 _UIF_SUSPEND	=	0x00da
                           0000D9   502 _UIF_TRANSFER	=	0x00d9
                           0000D8   503 _UIF_DETECT	=	0x00d8
                           0000D8   504 _UIF_BUS_RST	=	0x00d8
                                    505 ;--------------------------------------------------------
                                    506 ; overlayable register banks
                                    507 ;--------------------------------------------------------
                                    508 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        509 	.ds 8
                                    510 ;--------------------------------------------------------
                                    511 ; internal ram data
                                    512 ;--------------------------------------------------------
                                    513 	.area DSEG    (DATA)
      000000                        514 _ssd1306_setCursor_PARM_2:
      000000                        515 	.ds 1
                                    516 ;--------------------------------------------------------
                                    517 ; overlayable items in internal ram
                                    518 ;--------------------------------------------------------
                                    519 ;--------------------------------------------------------
                                    520 ; indirectly addressable internal ram data
                                    521 ;--------------------------------------------------------
                                    522 	.area ISEG    (DATA)
                                    523 ;--------------------------------------------------------
                                    524 ; absolute internal ram data
                                    525 ;--------------------------------------------------------
                                    526 	.area IABS    (ABS,DATA)
                                    527 	.area IABS    (ABS,DATA)
                                    528 ;--------------------------------------------------------
                                    529 ; bit data
                                    530 ;--------------------------------------------------------
                                    531 	.area BSEG    (BIT)
                                    532 ;--------------------------------------------------------
                                    533 ; paged external ram data
                                    534 ;--------------------------------------------------------
                                    535 	.area PSEG    (PAG,XDATA)
                                    536 ;--------------------------------------------------------
                                    537 ; uninitialized external ram data
                                    538 ;--------------------------------------------------------
                                    539 	.area XSEG    (XDATA)
                                    540 ;--------------------------------------------------------
                                    541 ; absolute external ram data
                                    542 ;--------------------------------------------------------
                                    543 	.area XABS    (ABS,XDATA)
                                    544 ;--------------------------------------------------------
                                    545 ; initialized external ram data
                                    546 ;--------------------------------------------------------
                                    547 	.area XISEG   (XDATA)
                                    548 	.area HOME    (CODE)
                                    549 	.area GSINIT0 (CODE)
                                    550 	.area GSINIT1 (CODE)
                                    551 	.area GSINIT2 (CODE)
                                    552 	.area GSINIT3 (CODE)
                                    553 	.area GSINIT4 (CODE)
                                    554 	.area GSINIT5 (CODE)
                                    555 	.area GSINIT  (CODE)
                                    556 	.area GSFINAL (CODE)
                                    557 	.area CSEG    (CODE)
                                    558 ;--------------------------------------------------------
                                    559 ; global & static initialisations
                                    560 ;--------------------------------------------------------
                                    561 	.area HOME    (CODE)
                                    562 	.area GSINIT  (CODE)
                                    563 	.area GSFINAL (CODE)
                                    564 	.area GSINIT  (CODE)
                                    565 ;--------------------------------------------------------
                                    566 ; Home
                                    567 ;--------------------------------------------------------
                                    568 	.area HOME    (CODE)
                                    569 	.area HOME    (CODE)
                                    570 ;--------------------------------------------------------
                                    571 ; code
                                    572 ;--------------------------------------------------------
                                    573 	.area CSEG    (CODE)
                                    574 ;------------------------------------------------------------
                                    575 ;Allocation info for local variables in function 'ssd1306_initialise'
                                    576 ;------------------------------------------------------------
                                    577 ;i                         Allocated to registers r7 
                                    578 ;------------------------------------------------------------
                                    579 ;	src\ssd1306.c:128: void ssd1306_initialise(void) {
                                    580 ;	-----------------------------------------
                                    581 ;	 function ssd1306_initialise
                                    582 ;	-----------------------------------------
      000000                        583 _ssd1306_initialise:
                           000007   584 	ar7 = 0x07
                           000006   585 	ar6 = 0x06
                           000005   586 	ar5 = 0x05
                           000004   587 	ar4 = 0x04
                           000003   588 	ar3 = 0x03
                           000002   589 	ar2 = 0x02
                           000001   590 	ar1 = 0x01
                           000000   591 	ar0 = 0x00
                                    592 ;	src\ssd1306.c:129: i2c_startCommunication(OLED_ADDR);
      000000 75 82 78         [24]  593 	mov	dpl, #0x78
      000003 12r00r00         [24]  594 	lcall	_i2c_startCommunication
                                    595 ;	src\ssd1306.c:130: i2c_writeByte(OLED_CMD_MODE);
      000006 75 82 00         [24]  596 	mov	dpl, #0x00
      000009 12r00r00         [24]  597 	lcall	_i2c_writeByte
                                    598 ;	src\ssd1306.c:131: for (uint8_t i = 0; i < sizeof(OLED_INIT_CMD); i++) {
      00000C 7F 00            [12]  599 	mov	r7,#0x00
      00000E                        600 00103$:
      00000E BF 0E 00         [24]  601 	cjne	r7,#0x0e,00120$
      000011                        602 00120$:
      000011 50 11            [24]  603 	jnc	00101$
                                    604 ;	src\ssd1306.c:132: i2c_writeByte(OLED_INIT_CMD[i]);
      000013 EF               [12]  605 	mov	a,r7
      000014 90r00r00         [24]  606 	mov	dptr,#_OLED_INIT_CMD
      000017 93               [24]  607 	movc	a,@a+dptr
      000018 F5 82            [12]  608 	mov	dpl,a
      00001A C0 07            [24]  609 	push	ar7
      00001C 12r00r00         [24]  610 	lcall	_i2c_writeByte
      00001F D0 07            [24]  611 	pop	ar7
                                    612 ;	src\ssd1306.c:131: for (uint8_t i = 0; i < sizeof(OLED_INIT_CMD); i++) {
      000021 0F               [12]  613 	inc	r7
      000022 80 EA            [24]  614 	sjmp	00103$
      000024                        615 00101$:
                                    616 ;	src\ssd1306.c:134: i2c_stopCommunication();
                                    617 ;	src\ssd1306.c:135: }
      000024 02r00r00         [24]  618 	ljmp	_i2c_stopCommunication
                                    619 ;------------------------------------------------------------
                                    620 ;Allocation info for local variables in function 'ssd1306_verticalShift'
                                    621 ;------------------------------------------------------------
                                    622 ;yPosition                 Allocated to registers r7 
                                    623 ;------------------------------------------------------------
                                    624 ;	src\ssd1306.c:138: void ssd1306_verticalShift(uint8_t yPosition) {
                                    625 ;	-----------------------------------------
                                    626 ;	 function ssd1306_verticalShift
                                    627 ;	-----------------------------------------
      000027                        628 _ssd1306_verticalShift:
      000027 AF 82            [24]  629 	mov	r7, dpl
                                    630 ;	src\ssd1306.c:139: i2c_startCommunication(OLED_ADDR);
      000029 75 82 78         [24]  631 	mov	dpl, #0x78
      00002C C0 07            [24]  632 	push	ar7
      00002E 12r00r00         [24]  633 	lcall	_i2c_startCommunication
                                    634 ;	src\ssd1306.c:140: i2c_writeByte(OLED_CMD_MODE);
      000031 75 82 00         [24]  635 	mov	dpl, #0x00
      000034 12r00r00         [24]  636 	lcall	_i2c_writeByte
                                    637 ;	src\ssd1306.c:141: i2c_writeByte(OLED_OFFSET);
      000037 75 82 D3         [24]  638 	mov	dpl, #0xd3
      00003A 12r00r00         [24]  639 	lcall	_i2c_writeByte
      00003D D0 07            [24]  640 	pop	ar7
                                    641 ;	src\ssd1306.c:142: i2c_writeByte(yPosition);
      00003F 8F 82            [24]  642 	mov	dpl, r7
      000041 12r00r00         [24]  643 	lcall	_i2c_writeByte
                                    644 ;	src\ssd1306.c:143: i2c_stopCommunication();
                                    645 ;	src\ssd1306.c:144: }
      000044 02r00r00         [24]  646 	ljmp	_i2c_stopCommunication
                                    647 ;------------------------------------------------------------
                                    648 ;Allocation info for local variables in function 'ssd1306_printCharacter'
                                    649 ;------------------------------------------------------------
                                    650 ;character                 Allocated to registers r7 
                                    651 ;offset                    Allocated to registers r4 r7 
                                    652 ;i                         Allocated to registers r5 
                                    653 ;------------------------------------------------------------
                                    654 ;	src\ssd1306.c:147: void ssd1306_printCharacter(char character) {
                                    655 ;	-----------------------------------------
                                    656 ;	 function ssd1306_printCharacter
                                    657 ;	-----------------------------------------
      000047                        658 _ssd1306_printCharacter:
      000047 AF 82            [24]  659 	mov	r7, dpl
                                    660 ;	src\ssd1306.c:148: uint16_t offset = 0;
      000049 7D 00            [12]  661 	mov	r5,#0x00
      00004B 7E 00            [12]  662 	mov	r6,#0x00
                                    663 ;	src\ssd1306.c:150: if (character >= 32) {
      00004D BF 20 00         [24]  664 	cjne	r7,#0x20,00131$
      000050                        665 00131$:
      000050 40 06            [24]  666 	jc	00102$
                                    667 ;	src\ssd1306.c:151: offset = character - 32;
      000052 EF               [12]  668 	mov	a,r7
      000053 24 E0            [12]  669 	add	a,#0xe0
      000055 FD               [12]  670 	mov	r5,a
      000056 7E 00            [12]  671 	mov	r6,#0x00
      000058                        672 00102$:
                                    673 ;	src\ssd1306.c:154: offset += offset << 2;                  // -> offset = (ch - 32) * 5
      000058 ED               [12]  674 	mov	a,r5
      000059 2D               [12]  675 	add	a,r5
      00005A FC               [12]  676 	mov	r4,a
      00005B EE               [12]  677 	mov	a,r6
      00005C 33               [12]  678 	rlc	a
      00005D FF               [12]  679 	mov	r7,a
      00005E EC               [12]  680 	mov	a,r4
      00005F 2C               [12]  681 	add	a,r4
      000060 FC               [12]  682 	mov	r4,a
      000061 EF               [12]  683 	mov	a,r7
      000062 33               [12]  684 	rlc	a
      000063 FF               [12]  685 	mov	r7,a
      000064 EC               [12]  686 	mov	a,r4
      000065 2D               [12]  687 	add	a, r5
      000066 FC               [12]  688 	mov	r4,a
      000067 EF               [12]  689 	mov	a,r7
      000068 3E               [12]  690 	addc	a, r6
      000069 FF               [12]  691 	mov	r7,a
                                    692 ;	src\ssd1306.c:155: i2c_writeByte(0x00);                    // print spacing between characters
      00006A 75 82 00         [24]  693 	mov	dpl, #0x00
      00006D C0 07            [24]  694 	push	ar7
      00006F C0 04            [24]  695 	push	ar4
      000071 12r00r00         [24]  696 	lcall	_i2c_writeByte
      000074 D0 04            [24]  697 	pop	ar4
      000076 D0 07            [24]  698 	pop	ar7
                                    699 ;	src\ssd1306.c:156: for(uint8_t i = 0; i < OLED_FONT_WIDTH; i++) {
      000078 8C 06            [24]  700 	mov	ar6,r4
      00007A 7D 00            [12]  701 	mov	r5,#0x00
      00007C                        702 00105$:
      00007C BD 05 00         [24]  703 	cjne	r5,#0x05,00133$
      00007F                        704 00133$:
      00007F 50 25            [24]  705 	jnc	00107$
                                    706 ;	src\ssd1306.c:157: i2c_writeByte(OLED_FONT[offset++]);
      000081 EE               [12]  707 	mov	a,r6
      000082 24r0E            [12]  708 	add	a, #_OLED_FONT
      000084 F5 82            [12]  709 	mov	dpl,a
      000086 EF               [12]  710 	mov	a,r7
      000087 34s00            [12]  711 	addc	a, #(_OLED_FONT >> 8)
      000089 F5 83            [12]  712 	mov	dph,a
      00008B 0E               [12]  713 	inc	r6
      00008C BE 00 01         [24]  714 	cjne	r6,#0x00,00135$
      00008F 0F               [12]  715 	inc	r7
      000090                        716 00135$:
      000090 E4               [12]  717 	clr	a
      000091 93               [24]  718 	movc	a,@a+dptr
      000092 F5 82            [12]  719 	mov	dpl,a
      000094 C0 07            [24]  720 	push	ar7
      000096 C0 06            [24]  721 	push	ar6
      000098 C0 05            [24]  722 	push	ar5
      00009A 12r00r00         [24]  723 	lcall	_i2c_writeByte
      00009D D0 05            [24]  724 	pop	ar5
      00009F D0 06            [24]  725 	pop	ar6
      0000A1 D0 07            [24]  726 	pop	ar7
                                    727 ;	src\ssd1306.c:156: for(uint8_t i = 0; i < OLED_FONT_WIDTH; i++) {
      0000A3 0D               [12]  728 	inc	r5
      0000A4 80 D6            [24]  729 	sjmp	00105$
      0000A6                        730 00107$:
                                    731 ;	src\ssd1306.c:159: }
      0000A6 22               [24]  732 	ret
                                    733 ;------------------------------------------------------------
                                    734 ;Allocation info for local variables in function 'ssd1306_printString'
                                    735 ;------------------------------------------------------------
                                    736 ;string                    Allocated to registers r5 r6 r7 
                                    737 ;------------------------------------------------------------
                                    738 ;	src\ssd1306.c:162: void ssd1306_printString(char* string) {
                                    739 ;	-----------------------------------------
                                    740 ;	 function ssd1306_printString
                                    741 ;	-----------------------------------------
      0000A7                        742 _ssd1306_printString:
      0000A7 AD 82            [24]  743 	mov	r5, dpl
      0000A9 AE 83            [24]  744 	mov	r6, dph
      0000AB AF F0            [24]  745 	mov	r7, b
                                    746 ;	src\ssd1306.c:163: i2c_startCommunication(OLED_ADDR);
      0000AD 75 82 78         [24]  747 	mov	dpl, #0x78
      0000B0 C0 07            [24]  748 	push	ar7
      0000B2 C0 06            [24]  749 	push	ar6
      0000B4 C0 05            [24]  750 	push	ar5
      0000B6 12r00r00         [24]  751 	lcall	_i2c_startCommunication
                                    752 ;	src\ssd1306.c:164: i2c_writeByte(OLED_DAT_MODE);
      0000B9 75 82 40         [24]  753 	mov	dpl, #0x40
      0000BC 12r00r00         [24]  754 	lcall	_i2c_writeByte
      0000BF D0 05            [24]  755 	pop	ar5
      0000C1 D0 06            [24]  756 	pop	ar6
      0000C3 D0 07            [24]  757 	pop	ar7
                                    758 ;	src\ssd1306.c:165: while (*string) {                       // repeat until string terminator
      0000C5                        759 00101$:
      0000C5 8D 82            [24]  760 	mov	dpl,r5
      0000C7 8E 83            [24]  761 	mov	dph,r6
      0000C9 8F F0            [24]  762 	mov	b,r7
      0000CB 12r00r00         [24]  763 	lcall	__gptrget
      0000CE FC               [12]  764 	mov	r4,a
      0000CF 60 18            [24]  765 	jz	00103$
                                    766 ;	src\ssd1306.c:166: ssd1306_printCharacter(*string++);  // print character on OLED
      0000D1 8C 82            [24]  767 	mov	dpl,r4
      0000D3 0D               [12]  768 	inc	r5
      0000D4 BD 00 01         [24]  769 	cjne	r5,#0x00,00120$
      0000D7 0E               [12]  770 	inc	r6
      0000D8                        771 00120$:
      0000D8 C0 07            [24]  772 	push	ar7
      0000DA C0 06            [24]  773 	push	ar6
      0000DC C0 05            [24]  774 	push	ar5
      0000DE 12r00r47         [24]  775 	lcall	_ssd1306_printCharacter
      0000E1 D0 05            [24]  776 	pop	ar5
      0000E3 D0 06            [24]  777 	pop	ar6
      0000E5 D0 07            [24]  778 	pop	ar7
      0000E7 80 DC            [24]  779 	sjmp	00101$
      0000E9                        780 00103$:
                                    781 ;	src\ssd1306.c:168: i2c_stopCommunication();
                                    782 ;	src\ssd1306.c:169: }
      0000E9 02r00r00         [24]  783 	ljmp	_i2c_stopCommunication
                                    784 ;------------------------------------------------------------
                                    785 ;Allocation info for local variables in function 'ssd1306_printHexByte'
                                    786 ;------------------------------------------------------------
                                    787 ;value                     Allocated to registers r7 
                                    788 ;------------------------------------------------------------
                                    789 ;	src\ssd1306.c:171: void ssd1306_printHexByte(uint8_t value) {
                                    790 ;	-----------------------------------------
                                    791 ;	 function ssd1306_printHexByte
                                    792 ;	-----------------------------------------
      0000EC                        793 _ssd1306_printHexByte:
      0000EC AF 82            [24]  794 	mov	r7, dpl
                                    795 ;	src\ssd1306.c:172: i2c_startCommunication(OLED_ADDR);
      0000EE 75 82 78         [24]  796 	mov	dpl, #0x78
      0000F1 C0 07            [24]  797 	push	ar7
      0000F3 12r00r00         [24]  798 	lcall	_i2c_startCommunication
                                    799 ;	src\ssd1306.c:173: i2c_writeByte(OLED_DAT_MODE);
      0000F6 75 82 40         [24]  800 	mov	dpl, #0x40
      0000F9 12r00r00         [24]  801 	lcall	_i2c_writeByte
      0000FC D0 07            [24]  802 	pop	ar7
                                    803 ;	src\ssd1306.c:174: ssd1306_printCharacter(hexTable[(value >> 4)]);
      0000FE EF               [12]  804 	mov	a,r7
      0000FF C4               [12]  805 	swap	a
      000100 54 0F            [12]  806 	anl	a,#0x0f
      000102 90r01r4E         [24]  807 	mov	dptr,#_hexTable
      000105 93               [24]  808 	movc	a,@a+dptr
      000106 F5 82            [12]  809 	mov	dpl,a
      000108 C0 07            [24]  810 	push	ar7
      00010A 12r00r47         [24]  811 	lcall	_ssd1306_printCharacter
      00010D D0 07            [24]  812 	pop	ar7
                                    813 ;	src\ssd1306.c:175: ssd1306_printCharacter(hexTable[value & 0x0F]);
      00010F 53 07 0F         [24]  814 	anl	ar7,#0x0f
      000112 7E 00            [12]  815 	mov	r6,#0x00
      000114 EF               [12]  816 	mov	a,r7
      000115 24r4E            [12]  817 	add	a, #_hexTable
      000117 F5 82            [12]  818 	mov	dpl,a
      000119 EE               [12]  819 	mov	a,r6
      00011A 34s01            [12]  820 	addc	a, #(_hexTable >> 8)
      00011C F5 83            [12]  821 	mov	dph,a
      00011E E4               [12]  822 	clr	a
      00011F 93               [24]  823 	movc	a,@a+dptr
      000120 F5 82            [12]  824 	mov	dpl,a
      000122 12r00r47         [24]  825 	lcall	_ssd1306_printCharacter
                                    826 ;	src\ssd1306.c:176: i2c_stopCommunication();
                                    827 ;	src\ssd1306.c:177: }
      000125 02r00r00         [24]  828 	ljmp	_i2c_stopCommunication
                                    829 ;------------------------------------------------------------
                                    830 ;Allocation info for local variables in function 'ssd1306_printHexWord'
                                    831 ;------------------------------------------------------------
                                    832 ;value                     Allocated to registers r6 r7 
                                    833 ;------------------------------------------------------------
                                    834 ;	src\ssd1306.c:179: void ssd1306_printHexWord(uint16_t value) {
                                    835 ;	-----------------------------------------
                                    836 ;	 function ssd1306_printHexWord
                                    837 ;	-----------------------------------------
      000128                        838 _ssd1306_printHexWord:
      000128 AE 82            [24]  839 	mov	r6, dpl
      00012A AF 83            [24]  840 	mov	r7, dph
                                    841 ;	src\ssd1306.c:180: ssd1306_printHexByte(value >> 8);
      00012C 8F 82            [24]  842 	mov	dpl,r7
      00012E C0 07            [24]  843 	push	ar7
      000130 C0 06            [24]  844 	push	ar6
      000132 12r00rEC         [24]  845 	lcall	_ssd1306_printHexByte
      000135 D0 06            [24]  846 	pop	ar6
      000137 D0 07            [24]  847 	pop	ar7
                                    848 ;	src\ssd1306.c:181: ssd1306_printHexByte(value & 0xFF);
      000139 8E 82            [24]  849 	mov	dpl,r6
                                    850 ;	src\ssd1306.c:182: }
      00013B 02r00rEC         [24]  851 	ljmp	_ssd1306_printHexByte
                                    852 ;------------------------------------------------------------
                                    853 ;Allocation info for local variables in function 'ssd1306_setCursor'
                                    854 ;------------------------------------------------------------
                                    855 ;yPosition                 Allocated with name '_ssd1306_setCursor_PARM_2'
                                    856 ;xPosition                 Allocated to registers r7 
                                    857 ;------------------------------------------------------------
                                    858 ;	src\ssd1306.c:185: void ssd1306_setCursor(uint8_t xPosition, uint8_t yPosition) {
                                    859 ;	-----------------------------------------
                                    860 ;	 function ssd1306_setCursor
                                    861 ;	-----------------------------------------
      00013E                        862 _ssd1306_setCursor:
      00013E AF 82            [24]  863 	mov	r7, dpl
                                    864 ;	src\ssd1306.c:186: i2c_startCommunication(OLED_ADDR);
      000140 75 82 78         [24]  865 	mov	dpl, #0x78
      000143 C0 07            [24]  866 	push	ar7
      000145 12r00r00         [24]  867 	lcall	_i2c_startCommunication
                                    868 ;	src\ssd1306.c:187: i2c_writeByte(OLED_CMD_MODE);
      000148 75 82 00         [24]  869 	mov	dpl, #0x00
      00014B 12r00r00         [24]  870 	lcall	_i2c_writeByte
                                    871 ;	src\ssd1306.c:188: i2c_writeByte(OLED_PAGE | (yPosition & 0x07));          // set start page
      00014E E5*00            [12]  872 	mov	a,_ssd1306_setCursor_PARM_2
      000150 54 07            [12]  873 	anl	a,#0x07
      000152 44 B0            [12]  874 	orl	a,#0xb0
      000154 F5 82            [12]  875 	mov	dpl,a
      000156 12r00r00         [24]  876 	lcall	_i2c_writeByte
      000159 D0 07            [24]  877 	pop	ar7
                                    878 ;	src\ssd1306.c:189: i2c_writeByte(OLED_COLUMN_LOW | (xPosition & 0x0F));    // set low nibble of start column
      00015B 74 0F            [12]  879 	mov	a,#0x0f
      00015D 5F               [12]  880 	anl	a,r7
      00015E F5 82            [12]  881 	mov	dpl,a
      000160 C0 07            [24]  882 	push	ar7
      000162 12r00r00         [24]  883 	lcall	_i2c_writeByte
      000165 D0 07            [24]  884 	pop	ar7
                                    885 ;	src\ssd1306.c:190: i2c_writeByte(OLED_COLUMN_HIGH | (xPosition >> 4));     // set high nibble of start column
      000167 EF               [12]  886 	mov	a,r7
      000168 C4               [12]  887 	swap	a
      000169 54 0F            [12]  888 	anl	a,#0x0f
      00016B FF               [12]  889 	mov	r7,a
      00016C 74 10            [12]  890 	mov	a,#0x10
      00016E 4F               [12]  891 	orl	a,r7
      00016F F5 82            [12]  892 	mov	dpl,a
      000171 12r00r00         [24]  893 	lcall	_i2c_writeByte
                                    894 ;	src\ssd1306.c:191: i2c_stopCommunication();
                                    895 ;	src\ssd1306.c:192: }
      000174 02r00r00         [24]  896 	ljmp	_i2c_stopCommunication
                                    897 ;------------------------------------------------------------
                                    898 ;Allocation info for local variables in function 'ssd1306_clearScreen'
                                    899 ;------------------------------------------------------------
                                    900 ;i                         Allocated to registers r7 
                                    901 ;i                         Allocated to registers r6 
                                    902 ;------------------------------------------------------------
                                    903 ;	src\ssd1306.c:195: void ssd1306_clearScreen(void) {
                                    904 ;	-----------------------------------------
                                    905 ;	 function ssd1306_clearScreen
                                    906 ;	-----------------------------------------
      000177                        907 _ssd1306_clearScreen:
                                    908 ;	src\ssd1306.c:197: for (uint8_t i = 0; i < PAGES; i++) {       // clear screen line by line
      000177 7F 00            [12]  909 	mov	r7,#0x00
      000179                        910 00107$:
      000179 BF 04 00         [24]  911 	cjne	r7,#0x04,00137$
      00017C                        912 00137$:
      00017C 50 38            [24]  913 	jnc	00109$
                                    914 ;	src\ssd1306.c:198: ssd1306_setCursor(0, i);
      00017E 8F*00            [24]  915 	mov	_ssd1306_setCursor_PARM_2,r7
      000180 75 82 00         [24]  916 	mov	dpl, #0x00
      000183 C0 07            [24]  917 	push	ar7
      000185 12r01r3E         [24]  918 	lcall	_ssd1306_setCursor
                                    919 ;	src\ssd1306.c:199: i2c_startCommunication(OLED_ADDR);      // start transmission to OLED
      000188 75 82 78         [24]  920 	mov	dpl, #0x78
      00018B 12r00r00         [24]  921 	lcall	_i2c_startCommunication
                                    922 ;	src\ssd1306.c:200: i2c_writeByte(OLED_DAT_MODE);           // set data mode
      00018E 75 82 40         [24]  923 	mov	dpl, #0x40
      000191 12r00r00         [24]  924 	lcall	_i2c_writeByte
      000194 D0 07            [24]  925 	pop	ar7
                                    926 ;	src\ssd1306.c:202: for(uint8_t i = 128; i; i--) {
      000196 7E 80            [12]  927 	mov	r6,#0x80
      000198                        928 00104$:
      000198 EE               [12]  929 	mov	a,r6
      000199 60 11            [24]  930 	jz	00101$
                                    931 ;	src\ssd1306.c:203: i2c_writeByte(0x00);
      00019B 75 82 00         [24]  932 	mov	dpl, #0x00
      00019E C0 07            [24]  933 	push	ar7
      0001A0 C0 06            [24]  934 	push	ar6
      0001A2 12r00r00         [24]  935 	lcall	_i2c_writeByte
      0001A5 D0 06            [24]  936 	pop	ar6
      0001A7 D0 07            [24]  937 	pop	ar7
                                    938 ;	src\ssd1306.c:202: for(uint8_t i = 128; i; i--) {
      0001A9 1E               [12]  939 	dec	r6
      0001AA 80 EC            [24]  940 	sjmp	00104$
      0001AC                        941 00101$:
                                    942 ;	src\ssd1306.c:205: i2c_stopCommunication();                // stop transmission
      0001AC C0 07            [24]  943 	push	ar7
      0001AE 12r00r00         [24]  944 	lcall	_i2c_stopCommunication
      0001B1 D0 07            [24]  945 	pop	ar7
                                    946 ;	src\ssd1306.c:197: for (uint8_t i = 0; i < PAGES; i++) {       // clear screen line by line
      0001B3 0F               [12]  947 	inc	r7
      0001B4 80 C3            [24]  948 	sjmp	00107$
      0001B6                        949 00109$:
                                    950 ;	src\ssd1306.c:207: }
      0001B6 22               [24]  951 	ret
                                    952 ;------------------------------------------------------------
                                    953 ;Allocation info for local variables in function 'ssd1306_test'
                                    954 ;------------------------------------------------------------
                                    955 ;c                         Allocated to registers r7 
                                    956 ;l                         Allocated to registers r6 
                                    957 ;p                         Allocated to registers r4 
                                    958 ;------------------------------------------------------------
                                    959 ;	src\ssd1306.c:209: void ssd1306_test(void) {
                                    960 ;	-----------------------------------------
                                    961 ;	 function ssd1306_test
                                    962 ;	-----------------------------------------
      0001B7                        963 _ssd1306_test:
                                    964 ;	src\ssd1306.c:211: uint8_t c = 32;
      0001B7 7F 20            [12]  965 	mov	r7,#0x20
                                    966 ;	src\ssd1306.c:213: for (uint8_t l = 0; l < 4; l++) {
      0001B9 7E 00            [12]  967 	mov	r6,#0x00
      0001BB                        968 00109$:
      0001BB BE 04 00         [24]  969 	cjne	r6,#0x04,00145$
      0001BE                        970 00145$:
      0001BE 50 4D            [24]  971 	jnc	00111$
                                    972 ;	src\ssd1306.c:214: ssd1306_setCursor(0, l * MULTIPLE);
      0001C0 8E*00            [24]  973 	mov	_ssd1306_setCursor_PARM_2,r6
      0001C2 75 82 00         [24]  974 	mov	dpl, #0x00
      0001C5 C0 07            [24]  975 	push	ar7
      0001C7 C0 06            [24]  976 	push	ar6
      0001C9 12r01r3E         [24]  977 	lcall	_ssd1306_setCursor
                                    978 ;	src\ssd1306.c:215: i2c_startCommunication(OLED_ADDR);
      0001CC 75 82 78         [24]  979 	mov	dpl, #0x78
      0001CF 12r00r00         [24]  980 	lcall	_i2c_startCommunication
                                    981 ;	src\ssd1306.c:216: i2c_writeByte(OLED_DAT_MODE);
      0001D2 75 82 40         [24]  982 	mov	dpl, #0x40
      0001D5 12r00r00         [24]  983 	lcall	_i2c_writeByte
      0001D8 D0 06            [24]  984 	pop	ar6
      0001DA D0 07            [24]  985 	pop	ar7
                                    986 ;	src\ssd1306.c:218: for (uint8_t p = 20; p; p--) {
      0001DC 8F 05            [24]  987 	mov	ar5,r7
      0001DE 7C 14            [12]  988 	mov	r4,#0x14
      0001E0                        989 00106$:
      0001E0 EC               [12]  990 	mov	a,r4
      0001E1 60 1A            [24]  991 	jz	00118$
                                    992 ;	src\ssd1306.c:219: ssd1306_printCharacter(c++);
      0001E3 8D 82            [24]  993 	mov	dpl,r5
      0001E5 0D               [12]  994 	inc	r5
      0001E6 C0 06            [24]  995 	push	ar6
      0001E8 C0 05            [24]  996 	push	ar5
      0001EA C0 04            [24]  997 	push	ar4
      0001EC 12r00r47         [24]  998 	lcall	_ssd1306_printCharacter
      0001EF D0 04            [24]  999 	pop	ar4
      0001F1 D0 05            [24] 1000 	pop	ar5
      0001F3 D0 06            [24] 1001 	pop	ar6
                                   1002 ;	src\ssd1306.c:220: if (c == 32 + 64) {
      0001F5 BD 60 02         [24] 1003 	cjne	r5,#0x60,00148$
      0001F8 80 03            [24] 1004 	sjmp	00118$
      0001FA                       1005 00148$:
                                   1006 ;	src\ssd1306.c:218: for (uint8_t p = 20; p; p--) {
      0001FA 1C               [12] 1007 	dec	r4
      0001FB 80 E3            [24] 1008 	sjmp	00106$
      0001FD                       1009 00118$:
      0001FD 8D 07            [24] 1010 	mov	ar7,r5
                                   1011 ;	src\ssd1306.c:224: i2c_stopCommunication();
      0001FF C0 07            [24] 1012 	push	ar7
      000201 C0 06            [24] 1013 	push	ar6
      000203 12r00r00         [24] 1014 	lcall	_i2c_stopCommunication
      000206 D0 06            [24] 1015 	pop	ar6
      000208 D0 07            [24] 1016 	pop	ar7
                                   1017 ;	src\ssd1306.c:213: for (uint8_t l = 0; l < 4; l++) {
      00020A 0E               [12] 1018 	inc	r6
      00020B 80 AE            [24] 1019 	sjmp	00109$
      00020D                       1020 00111$:
                                   1021 ;	src\ssd1306.c:226: }
      00020D 22               [24] 1022 	ret
                                   1023 	.area CSEG    (CODE)
                                   1024 	.area CONST   (CODE)
      000000                       1025 _OLED_INIT_CMD:
      000000 A8                    1026 	.db #0xa8	; 168
      000001 1F                    1027 	.db #0x1f	; 31
      000002 20                    1028 	.db #0x20	; 32
      000003 00                    1029 	.db #0x00	; 0
      000004 22                    1030 	.db #0x22	; 34
      000005 00                    1031 	.db #0x00	; 0
      000006 03                    1032 	.db #0x03	; 3
      000007 DA                    1033 	.db #0xda	; 218
      000008 02                    1034 	.db #0x02	; 2
      000009 8D                    1035 	.db #0x8d	; 141
      00000A 14                    1036 	.db #0x14	; 20
      00000B AF                    1037 	.db #0xaf	; 175
      00000C A1                    1038 	.db #0xa1	; 161
      00000D C8                    1039 	.db #0xc8	; 200
      00000E                       1040 _OLED_FONT:
      00000E 00                    1041 	.db #0x00	; 0
      00000F 00                    1042 	.db #0x00	; 0
      000010 00                    1043 	.db #0x00	; 0
      000011 00                    1044 	.db #0x00	; 0
      000012 00                    1045 	.db #0x00	; 0
      000013 00                    1046 	.db #0x00	; 0
      000014 00                    1047 	.db #0x00	; 0
      000015 2F                    1048 	.db #0x2f	; 47
      000016 00                    1049 	.db #0x00	; 0
      000017 00                    1050 	.db #0x00	; 0
      000018 00                    1051 	.db #0x00	; 0
      000019 07                    1052 	.db #0x07	; 7
      00001A 00                    1053 	.db #0x00	; 0
      00001B 07                    1054 	.db #0x07	; 7
      00001C 00                    1055 	.db #0x00	; 0
      00001D 14                    1056 	.db #0x14	; 20
      00001E 7F                    1057 	.db #0x7f	; 127
      00001F 14                    1058 	.db #0x14	; 20
      000020 7F                    1059 	.db #0x7f	; 127
      000021 14                    1060 	.db #0x14	; 20
      000022 24                    1061 	.db #0x24	; 36
      000023 2A                    1062 	.db #0x2a	; 42
      000024 7F                    1063 	.db #0x7f	; 127
      000025 2A                    1064 	.db #0x2a	; 42
      000026 12                    1065 	.db #0x12	; 18
      000027 62                    1066 	.db #0x62	; 98	'b'
      000028 64                    1067 	.db #0x64	; 100	'd'
      000029 08                    1068 	.db #0x08	; 8
      00002A 13                    1069 	.db #0x13	; 19
      00002B 23                    1070 	.db #0x23	; 35
      00002C 36                    1071 	.db #0x36	; 54	'6'
      00002D 49                    1072 	.db #0x49	; 73	'I'
      00002E 55                    1073 	.db #0x55	; 85	'U'
      00002F 22                    1074 	.db #0x22	; 34
      000030 50                    1075 	.db #0x50	; 80	'P'
      000031 00                    1076 	.db #0x00	; 0
      000032 05                    1077 	.db #0x05	; 5
      000033 03                    1078 	.db #0x03	; 3
      000034 00                    1079 	.db #0x00	; 0
      000035 00                    1080 	.db #0x00	; 0
      000036 00                    1081 	.db #0x00	; 0
      000037 1C                    1082 	.db #0x1c	; 28
      000038 22                    1083 	.db #0x22	; 34
      000039 41                    1084 	.db #0x41	; 65	'A'
      00003A 00                    1085 	.db #0x00	; 0
      00003B 00                    1086 	.db #0x00	; 0
      00003C 41                    1087 	.db #0x41	; 65	'A'
      00003D 22                    1088 	.db #0x22	; 34
      00003E 1C                    1089 	.db #0x1c	; 28
      00003F 00                    1090 	.db #0x00	; 0
      000040 14                    1091 	.db #0x14	; 20
      000041 08                    1092 	.db #0x08	; 8
      000042 3E                    1093 	.db #0x3e	; 62
      000043 08                    1094 	.db #0x08	; 8
      000044 14                    1095 	.db #0x14	; 20
      000045 08                    1096 	.db #0x08	; 8
      000046 08                    1097 	.db #0x08	; 8
      000047 3E                    1098 	.db #0x3e	; 62
      000048 08                    1099 	.db #0x08	; 8
      000049 08                    1100 	.db #0x08	; 8
      00004A 00                    1101 	.db #0x00	; 0
      00004B 00                    1102 	.db #0x00	; 0
      00004C A0                    1103 	.db #0xa0	; 160
      00004D 60                    1104 	.db #0x60	; 96
      00004E 00                    1105 	.db #0x00	; 0
      00004F 08                    1106 	.db #0x08	; 8
      000050 08                    1107 	.db #0x08	; 8
      000051 08                    1108 	.db #0x08	; 8
      000052 08                    1109 	.db #0x08	; 8
      000053 08                    1110 	.db #0x08	; 8
      000054 00                    1111 	.db #0x00	; 0
      000055 60                    1112 	.db #0x60	; 96
      000056 60                    1113 	.db #0x60	; 96
      000057 00                    1114 	.db #0x00	; 0
      000058 00                    1115 	.db #0x00	; 0
      000059 20                    1116 	.db #0x20	; 32
      00005A 10                    1117 	.db #0x10	; 16
      00005B 08                    1118 	.db #0x08	; 8
      00005C 04                    1119 	.db #0x04	; 4
      00005D 02                    1120 	.db #0x02	; 2
      00005E 3E                    1121 	.db #0x3e	; 62
      00005F 51                    1122 	.db #0x51	; 81	'Q'
      000060 49                    1123 	.db #0x49	; 73	'I'
      000061 45                    1124 	.db #0x45	; 69	'E'
      000062 3E                    1125 	.db #0x3e	; 62
      000063 00                    1126 	.db #0x00	; 0
      000064 42                    1127 	.db #0x42	; 66	'B'
      000065 7F                    1128 	.db #0x7f	; 127
      000066 40                    1129 	.db #0x40	; 64
      000067 00                    1130 	.db #0x00	; 0
      000068 42                    1131 	.db #0x42	; 66	'B'
      000069 61                    1132 	.db #0x61	; 97	'a'
      00006A 51                    1133 	.db #0x51	; 81	'Q'
      00006B 49                    1134 	.db #0x49	; 73	'I'
      00006C 46                    1135 	.db #0x46	; 70	'F'
      00006D 21                    1136 	.db #0x21	; 33
      00006E 41                    1137 	.db #0x41	; 65	'A'
      00006F 45                    1138 	.db #0x45	; 69	'E'
      000070 4B                    1139 	.db #0x4b	; 75	'K'
      000071 31                    1140 	.db #0x31	; 49	'1'
      000072 18                    1141 	.db #0x18	; 24
      000073 14                    1142 	.db #0x14	; 20
      000074 12                    1143 	.db #0x12	; 18
      000075 7F                    1144 	.db #0x7f	; 127
      000076 10                    1145 	.db #0x10	; 16
      000077 27                    1146 	.db #0x27	; 39
      000078 45                    1147 	.db #0x45	; 69	'E'
      000079 45                    1148 	.db #0x45	; 69	'E'
      00007A 45                    1149 	.db #0x45	; 69	'E'
      00007B 39                    1150 	.db #0x39	; 57	'9'
      00007C 3C                    1151 	.db #0x3c	; 60
      00007D 4A                    1152 	.db #0x4a	; 74	'J'
      00007E 49                    1153 	.db #0x49	; 73	'I'
      00007F 49                    1154 	.db #0x49	; 73	'I'
      000080 30                    1155 	.db #0x30	; 48	'0'
      000081 01                    1156 	.db #0x01	; 1
      000082 71                    1157 	.db #0x71	; 113	'q'
      000083 09                    1158 	.db #0x09	; 9
      000084 05                    1159 	.db #0x05	; 5
      000085 03                    1160 	.db #0x03	; 3
      000086 36                    1161 	.db #0x36	; 54	'6'
      000087 49                    1162 	.db #0x49	; 73	'I'
      000088 49                    1163 	.db #0x49	; 73	'I'
      000089 49                    1164 	.db #0x49	; 73	'I'
      00008A 36                    1165 	.db #0x36	; 54	'6'
      00008B 06                    1166 	.db #0x06	; 6
      00008C 49                    1167 	.db #0x49	; 73	'I'
      00008D 49                    1168 	.db #0x49	; 73	'I'
      00008E 29                    1169 	.db #0x29	; 41
      00008F 1E                    1170 	.db #0x1e	; 30
      000090 00                    1171 	.db #0x00	; 0
      000091 36                    1172 	.db #0x36	; 54	'6'
      000092 36                    1173 	.db #0x36	; 54	'6'
      000093 00                    1174 	.db #0x00	; 0
      000094 00                    1175 	.db #0x00	; 0
      000095 00                    1176 	.db #0x00	; 0
      000096 56                    1177 	.db #0x56	; 86	'V'
      000097 36                    1178 	.db #0x36	; 54	'6'
      000098 00                    1179 	.db #0x00	; 0
      000099 00                    1180 	.db #0x00	; 0
      00009A 08                    1181 	.db #0x08	; 8
      00009B 14                    1182 	.db #0x14	; 20
      00009C 22                    1183 	.db #0x22	; 34
      00009D 41                    1184 	.db #0x41	; 65	'A'
      00009E 00                    1185 	.db #0x00	; 0
      00009F 14                    1186 	.db #0x14	; 20
      0000A0 14                    1187 	.db #0x14	; 20
      0000A1 14                    1188 	.db #0x14	; 20
      0000A2 14                    1189 	.db #0x14	; 20
      0000A3 14                    1190 	.db #0x14	; 20
      0000A4 00                    1191 	.db #0x00	; 0
      0000A5 41                    1192 	.db #0x41	; 65	'A'
      0000A6 22                    1193 	.db #0x22	; 34
      0000A7 14                    1194 	.db #0x14	; 20
      0000A8 08                    1195 	.db #0x08	; 8
      0000A9 02                    1196 	.db #0x02	; 2
      0000AA 01                    1197 	.db #0x01	; 1
      0000AB 51                    1198 	.db #0x51	; 81	'Q'
      0000AC 09                    1199 	.db #0x09	; 9
      0000AD 06                    1200 	.db #0x06	; 6
      0000AE 32                    1201 	.db #0x32	; 50	'2'
      0000AF 49                    1202 	.db #0x49	; 73	'I'
      0000B0 59                    1203 	.db #0x59	; 89	'Y'
      0000B1 51                    1204 	.db #0x51	; 81	'Q'
      0000B2 3E                    1205 	.db #0x3e	; 62
      0000B3 7C                    1206 	.db #0x7c	; 124
      0000B4 12                    1207 	.db #0x12	; 18
      0000B5 11                    1208 	.db #0x11	; 17
      0000B6 12                    1209 	.db #0x12	; 18
      0000B7 7C                    1210 	.db #0x7c	; 124
      0000B8 7F                    1211 	.db #0x7f	; 127
      0000B9 49                    1212 	.db #0x49	; 73	'I'
      0000BA 49                    1213 	.db #0x49	; 73	'I'
      0000BB 49                    1214 	.db #0x49	; 73	'I'
      0000BC 36                    1215 	.db #0x36	; 54	'6'
      0000BD 3E                    1216 	.db #0x3e	; 62
      0000BE 41                    1217 	.db #0x41	; 65	'A'
      0000BF 41                    1218 	.db #0x41	; 65	'A'
      0000C0 41                    1219 	.db #0x41	; 65	'A'
      0000C1 22                    1220 	.db #0x22	; 34
      0000C2 7F                    1221 	.db #0x7f	; 127
      0000C3 41                    1222 	.db #0x41	; 65	'A'
      0000C4 41                    1223 	.db #0x41	; 65	'A'
      0000C5 22                    1224 	.db #0x22	; 34
      0000C6 1C                    1225 	.db #0x1c	; 28
      0000C7 7F                    1226 	.db #0x7f	; 127
      0000C8 49                    1227 	.db #0x49	; 73	'I'
      0000C9 49                    1228 	.db #0x49	; 73	'I'
      0000CA 49                    1229 	.db #0x49	; 73	'I'
      0000CB 41                    1230 	.db #0x41	; 65	'A'
      0000CC 7F                    1231 	.db #0x7f	; 127
      0000CD 09                    1232 	.db #0x09	; 9
      0000CE 09                    1233 	.db #0x09	; 9
      0000CF 09                    1234 	.db #0x09	; 9
      0000D0 01                    1235 	.db #0x01	; 1
      0000D1 3E                    1236 	.db #0x3e	; 62
      0000D2 41                    1237 	.db #0x41	; 65	'A'
      0000D3 49                    1238 	.db #0x49	; 73	'I'
      0000D4 49                    1239 	.db #0x49	; 73	'I'
      0000D5 7A                    1240 	.db #0x7a	; 122	'z'
      0000D6 7F                    1241 	.db #0x7f	; 127
      0000D7 08                    1242 	.db #0x08	; 8
      0000D8 08                    1243 	.db #0x08	; 8
      0000D9 08                    1244 	.db #0x08	; 8
      0000DA 7F                    1245 	.db #0x7f	; 127
      0000DB 00                    1246 	.db #0x00	; 0
      0000DC 41                    1247 	.db #0x41	; 65	'A'
      0000DD 7F                    1248 	.db #0x7f	; 127
      0000DE 41                    1249 	.db #0x41	; 65	'A'
      0000DF 00                    1250 	.db #0x00	; 0
      0000E0 20                    1251 	.db #0x20	; 32
      0000E1 40                    1252 	.db #0x40	; 64
      0000E2 41                    1253 	.db #0x41	; 65	'A'
      0000E3 3F                    1254 	.db #0x3f	; 63
      0000E4 01                    1255 	.db #0x01	; 1
      0000E5 7F                    1256 	.db #0x7f	; 127
      0000E6 08                    1257 	.db #0x08	; 8
      0000E7 14                    1258 	.db #0x14	; 20
      0000E8 22                    1259 	.db #0x22	; 34
      0000E9 41                    1260 	.db #0x41	; 65	'A'
      0000EA 7F                    1261 	.db #0x7f	; 127
      0000EB 40                    1262 	.db #0x40	; 64
      0000EC 40                    1263 	.db #0x40	; 64
      0000ED 40                    1264 	.db #0x40	; 64
      0000EE 40                    1265 	.db #0x40	; 64
      0000EF 7F                    1266 	.db #0x7f	; 127
      0000F0 02                    1267 	.db #0x02	; 2
      0000F1 0C                    1268 	.db #0x0c	; 12
      0000F2 02                    1269 	.db #0x02	; 2
      0000F3 7F                    1270 	.db #0x7f	; 127
      0000F4 7F                    1271 	.db #0x7f	; 127
      0000F5 04                    1272 	.db #0x04	; 4
      0000F6 08                    1273 	.db #0x08	; 8
      0000F7 10                    1274 	.db #0x10	; 16
      0000F8 7F                    1275 	.db #0x7f	; 127
      0000F9 3E                    1276 	.db #0x3e	; 62
      0000FA 41                    1277 	.db #0x41	; 65	'A'
      0000FB 41                    1278 	.db #0x41	; 65	'A'
      0000FC 41                    1279 	.db #0x41	; 65	'A'
      0000FD 3E                    1280 	.db #0x3e	; 62
      0000FE 7F                    1281 	.db #0x7f	; 127
      0000FF 09                    1282 	.db #0x09	; 9
      000100 09                    1283 	.db #0x09	; 9
      000101 09                    1284 	.db #0x09	; 9
      000102 06                    1285 	.db #0x06	; 6
      000103 3E                    1286 	.db #0x3e	; 62
      000104 41                    1287 	.db #0x41	; 65	'A'
      000105 51                    1288 	.db #0x51	; 81	'Q'
      000106 21                    1289 	.db #0x21	; 33
      000107 5E                    1290 	.db #0x5e	; 94
      000108 7F                    1291 	.db #0x7f	; 127
      000109 09                    1292 	.db #0x09	; 9
      00010A 19                    1293 	.db #0x19	; 25
      00010B 29                    1294 	.db #0x29	; 41
      00010C 46                    1295 	.db #0x46	; 70	'F'
      00010D 46                    1296 	.db #0x46	; 70	'F'
      00010E 49                    1297 	.db #0x49	; 73	'I'
      00010F 49                    1298 	.db #0x49	; 73	'I'
      000110 49                    1299 	.db #0x49	; 73	'I'
      000111 31                    1300 	.db #0x31	; 49	'1'
      000112 01                    1301 	.db #0x01	; 1
      000113 01                    1302 	.db #0x01	; 1
      000114 7F                    1303 	.db #0x7f	; 127
      000115 01                    1304 	.db #0x01	; 1
      000116 01                    1305 	.db #0x01	; 1
      000117 3F                    1306 	.db #0x3f	; 63
      000118 40                    1307 	.db #0x40	; 64
      000119 40                    1308 	.db #0x40	; 64
      00011A 40                    1309 	.db #0x40	; 64
      00011B 3F                    1310 	.db #0x3f	; 63
      00011C 1F                    1311 	.db #0x1f	; 31
      00011D 20                    1312 	.db #0x20	; 32
      00011E 40                    1313 	.db #0x40	; 64
      00011F 20                    1314 	.db #0x20	; 32
      000120 1F                    1315 	.db #0x1f	; 31
      000121 3F                    1316 	.db #0x3f	; 63
      000122 40                    1317 	.db #0x40	; 64
      000123 38                    1318 	.db #0x38	; 56	'8'
      000124 40                    1319 	.db #0x40	; 64
      000125 3F                    1320 	.db #0x3f	; 63
      000126 63                    1321 	.db #0x63	; 99	'c'
      000127 14                    1322 	.db #0x14	; 20
      000128 08                    1323 	.db #0x08	; 8
      000129 14                    1324 	.db #0x14	; 20
      00012A 63                    1325 	.db #0x63	; 99	'c'
      00012B 07                    1326 	.db #0x07	; 7
      00012C 08                    1327 	.db #0x08	; 8
      00012D 70                    1328 	.db #0x70	; 112	'p'
      00012E 08                    1329 	.db #0x08	; 8
      00012F 07                    1330 	.db #0x07	; 7
      000130 61                    1331 	.db #0x61	; 97	'a'
      000131 51                    1332 	.db #0x51	; 81	'Q'
      000132 49                    1333 	.db #0x49	; 73	'I'
      000133 45                    1334 	.db #0x45	; 69	'E'
      000134 43                    1335 	.db #0x43	; 67	'C'
      000135 00                    1336 	.db #0x00	; 0
      000136 7F                    1337 	.db #0x7f	; 127
      000137 41                    1338 	.db #0x41	; 65	'A'
      000138 41                    1339 	.db #0x41	; 65	'A'
      000139 00                    1340 	.db #0x00	; 0
      00013A 02                    1341 	.db #0x02	; 2
      00013B 04                    1342 	.db #0x04	; 4
      00013C 08                    1343 	.db #0x08	; 8
      00013D 10                    1344 	.db #0x10	; 16
      00013E 20                    1345 	.db #0x20	; 32
      00013F 00                    1346 	.db #0x00	; 0
      000140 41                    1347 	.db #0x41	; 65	'A'
      000141 41                    1348 	.db #0x41	; 65	'A'
      000142 7F                    1349 	.db #0x7f	; 127
      000143 00                    1350 	.db #0x00	; 0
      000144 04                    1351 	.db #0x04	; 4
      000145 02                    1352 	.db #0x02	; 2
      000146 01                    1353 	.db #0x01	; 1
      000147 02                    1354 	.db #0x02	; 2
      000148 04                    1355 	.db #0x04	; 4
      000149 40                    1356 	.db #0x40	; 64
      00014A 40                    1357 	.db #0x40	; 64
      00014B 40                    1358 	.db #0x40	; 64
      00014C 40                    1359 	.db #0x40	; 64
      00014D 40                    1360 	.db #0x40	; 64
      00014E                       1361 _hexTable:
      00014E 30                    1362 	.db #0x30	; 48	'0'
      00014F 31                    1363 	.db #0x31	; 49	'1'
      000150 32                    1364 	.db #0x32	; 50	'2'
      000151 33                    1365 	.db #0x33	; 51	'3'
      000152 34                    1366 	.db #0x34	; 52	'4'
      000153 35                    1367 	.db #0x35	; 53	'5'
      000154 36                    1368 	.db #0x36	; 54	'6'
      000155 37                    1369 	.db #0x37	; 55	'7'
      000156 38                    1370 	.db #0x38	; 56	'8'
      000157 39                    1371 	.db #0x39	; 57	'9'
      000158 41                    1372 	.db #0x41	; 65	'A'
      000159 42                    1373 	.db #0x42	; 66	'B'
      00015A 43                    1374 	.db #0x43	; 67	'C'
      00015B 44                    1375 	.db #0x44	; 68	'D'
      00015C 45                    1376 	.db #0x45	; 69	'E'
      00015D 46                    1377 	.db #0x46	; 70	'F'
                                   1378 	.area XINIT   (CODE)
                                   1379 	.area CABS    (ABS,CODE)
